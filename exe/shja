#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))

require 'shja'
require 'optparse'
require 'logger'

actors = []
format = nil
html   = false

config = {}
config[:username]    = ENV['SHJA_USERNAME']
config[:password]    = ENV['SHJA_PASSWORD']
config[:target_dir]  = ENV['SHJA_TARGET_DIR']

parser = OptionParser.new

subparsers = Hash.new {|h,k|
  $stderr.puts "no such subcommand: #{k}"
  exit 1
}
subparsers['refresh'] = OptionParser.new
subparsers['refresh'].on('-u URL_OR_ACTOR_ID') {|v| actors << v }
subparsers['download'] = OptionParser.new
subparsers['download'].on('-u URL_OR_ACTOR_ID') {|v| actors << v }
subparsers['download'].on('-f FORMAT') {|v| format = v }
subparsers['download'].on('--html-disable HTML_DISABLE') {|v| html = (v == 'true')}
subparsers['html'] = OptionParser.new

parser.order!(ARGV)
subcommand = ARGV.shift
subparsers[subcommand].parse!(ARGV) unless ARGV.empty?

unless config[:username] && config[:password] && config[:target_dir]
  raise "Required parameter is not specified: #{config}"
end

Shja.log.level = Logger::DEBUG
client = Shja::Client::Hc.new(**config)
if subcommand == 'refresh'
  actors.each do |url_or_id|
    client.refresh_actor!(url_or_id)
  end
end

if subcommand == 'download'
  actors.each do |url_or_id|
    client.download_by_actor(url_or_id, format)
    subcommand = 'html' if html
  end
end

if subcommand == 'html'
  client.generate_html
end
